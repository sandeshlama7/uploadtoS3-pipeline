name: Infrastructure setup

run-name: ${{ github.actor }} is testing the pipeline

on:
  workflow_dispatch:
  push:
    branches: [ "INTERN-77-" ]

jobs:
  infra_setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Terraform on Runner
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: export AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform apply
        run: terraform apply -var-file=./dev.tfvars -auto-approve -no-color
        working-directory: terraform

  upload_to_s3:
    runs-on: ubuntu-latest
    needs: infra_setup

    steps:
      - uses: actions/checkout@v4

      - name: Install awscli
        run: sudo snap install aws-cli --classic

      - name: export AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Upload Code to S3
        run: aws s3 cp nodeapp/ s3://8586-terraform-state/nodeapp-sandesh --recursive

  ansible_configure:
    runs-on: ubuntu-latest
    needs: infra_setup

    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v4

      - name: AWS Creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Install ansible, boto3 and botocore
        run: pip3 install ansible boto3 botocore

      - name: Run Ansible Playbook
        run: ansible-playbook -i aws_ec2.yml playbook.yml
        working-directory: ansible

  fetch_from_s3:
    runs-on: ubuntu-latest
    needs:
      - upload_to_s3
      - ansible_configure

    steps:
      - name: AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Get the instance-id
        uses: mathiasvr/command-output@v2.0.0
        id: get-instance-id
        with:
          run: |
            state_file_name=sandesh/terraform.tfstate
            aws s3 cp s3://8586-terraform-state/sandesh/terraform.tfstate $state_file_name
            instance_id=$(terraform output --json -state=$state_file_name | jq -r '.instance_id.value')
            echo "INSTANCE_ID=$instance_id" >> "$GITHUB_ENV"

      - name: Echo Instance ID
        run: echo " ${{ env.INSTANCE_ID }}"

      - name: Fetching Code to EC2
        uses: adexltd/aws-ssm-send-command@master
        id: create-directory
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          instance-ids: ${{ env.INSTANCE_ID }}

          working-directory: home/ec2-user
          command: |
            mkdir /home/ec2-user/simple_todo
            aws s3 cp s3://8586-terraform-state/nodeapp-sandesh /home/ec2-user/simple_todo/ --recursive

      - name: Run the bash script
        uses: adexltd/aws-ssm-send-command@master
        id: Run-deployment-script
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          instance-ids: ${{ env.INSTANCE_ID }}

          working-directory: home/ec2-user/simple_todo
          command: /bin/bash /home/ec2-user/simple_todo/nodestart.sh
